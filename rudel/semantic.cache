;; Object rudel/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "rudel/"
  :tables (list 
    (semanticdb-table "rudel.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [1118 1131]) ("eieio" include nil nil [1134 1150]) ("eieio-speedbar" include nil nil [1152 1177]) ("rudel-operations" include nil nil [1204 1231]) ("rudel-operators" include nil nil [1232 1258]) ("rudel-overlay" include nil nil [1259 1283]) ("rudel-interactive" include nil nil [1284 1312]) ("rudel-compat" include nil nil [1375 1398]) ("rudel-version" variable (:constant-flag t :default-value 0.1) nil [1459 1523]) ("rudel-backends" variable nil nil [1540 1595]) ("rudel-current-session" variable nil nil [1597 1724]) ("rudel-buffer-document" variable nil nil [1726 1845]) ("make-variable-buffer-local" code nil nil [1846 1897]) ("put" code nil nil [1898 1945]) ("rudel-buffer-change-workaround-data" variable nil nil [1947 2132]) ("make-variable-buffer-local" code nil nil [2133 2198]) ("put" code nil nil [2199 2260]) ("defgroup" code nil nil [2286 2372]) ("rudel-allocate-buffer-function" variable (:user-visible-flag t :default-value (quote rudel-allocate-buffer-clear-existing)) nil [2374 2760]) ("rudel-default-username" variable (:user-visible-flag t :default-value (user-login-name)) nil [2762 2855]) ("rudel-backend" type (:typemodifiers ("\"Class rudel-backend \"" ":abstract" "t") :members (("capabilities" variable (:default-value "nil" :type "list") nil nil)) :type "class") nil [2887 3055]) ("rudel-capable-of-p" function (:parent "rudel-backend" :arguments ("this" "capability")) nil [3057 3198]) ("rudel-ask-connect-info" function (:parent "rudel-backend" :arguments ("this")) nil [3200 3263]) ("rudel-connect" function (:parent "rudel-backend" :arguments ("this" "info")) nil [3265 3542]) ("rudel-ask-host-info" function (:parent "rudel-backend" :arguments ("this")) nil [3544 3604]) ("rudel-host" function (:parent "rudel-backend" :arguments ("this" "info")) nil [3606 3662]) ("rudel-make-document" function (:parent "rudel-backend" :arguments ("this" "name" "session")) nil [3664 3737]) ("rudel-session" type (:typemodifiers ("\"This class serves as a base class for rudel-client-session and
rudel-server-session. Consequently, it consists of slots common
to client and server sessions.\"" ":abstract" "t") :members (("backend" variable (:documentation "The backend used by this session." :type "rudel-backend-child") nil nil) ("users" variable (:documentation "The list of users participating in this session." :default-value "nil" :type "list") nil nil) ("documents" variable (:documentation "This list of documents available in this session." :default-value "nil" :type "list") nil nil)) :type "class") nil [3769 4424]) ("rudel-end" function (:parent "rudel-session" :arguments ("this")) nil [4426 4531]) ("rudel-add-user" function (:parent "rudel-session" :arguments ("this" "user")) nil [4533 4674]) ("rudel-remove-user" function (:parent "rudel-session" :arguments ("this" "user")) nil [4676 4830]) ("rudel-find-user" function (:parent "rudel-session" :arguments ("this" "which" "&optional" "test" "key")) nil [4832 5084]) ("rudel-add-document" function (:parent "rudel-session" :arguments ("this" "document")) nil [5086 5279]) ("rudel-remove-document" function (:parent "rudel-session" :arguments ("this" "document")) nil [5281 5404]) ("rudel-find-document" function (:parent "rudel-session" :arguments ("this" "which" "&optional" "test" "key")) nil [5406 5667]) ("rudel-unsubscribed-documents" function (:parent "rudel-session" :arguments ("this")) nil [5669 6013]) ("rudel-client-session" type (:typemodifiers ("\"Objects represent a collaborative editing session from a
client perspective.\"") :superclasses "rudel-session" :members (("connection" variable (:type "rudel-connection-child") nil nil) ("self" variable (:documentation "Points into USERS to the user object representing
the local user" :type "rudel-user-child") nil nil)) :type "class") nil [6051 6458]) ("rudel-end" function (:parent "rudel-client-session" :arguments ("this")) nil [6460 6777]) ("rudel-server-session" type (:typemodifiers ("\"Class rudel-server-session \"" ":abstract" "t") :superclasses "rudel-session" :type "class") nil [6816 6914]) ("rudel-connection" type (:typemodifiers ("\"This abstract class defines the interface implementations of
client protocols have to obey.\"" ":abstract" "t") :members (("session" variable (:type "rudel-session-child") nil nil)) :type "class") nil [6949 7183]) ("rudel-disconnect" function (:parent "rudel-connection" :arguments ("this")) nil [7185 7266]) ("rudel-change-color-" function (:parent "rudel-connection" :arguments ("this" "color")) nil [7268 7350]) ("rudel-publish" function (:parent "rudel-connection" :arguments ("this" "document")) nil [7352 7418]) ("rudel-subscribe-to" function (:parent "rudel-connection" :arguments ("this" "document")) nil [7420 7491]) ("rudel-unsubscribe-from" function (:parent "rudel-connection" :arguments ("this" "document")) nil [7493 7608]) ("rudel-local-insert" function (:parent "rudel-connection" :arguments ("this")) nil [7610 7672]) ("rudel-local-delete" function (:parent "rudel-connection" :arguments ("this")) nil [7676 7738]) ("rudel-remote-insert" function (:parent "rudel-connection" :arguments ("this")) nil [7740 7803]) ("rudel-remote-delete" function (:parent "rudel-connection" :arguments ("this")) nil [7807 7870]) ("rudel-user" type (:typemodifiers ("\"Objects of this class represent users participating in
collaborative editing session. Note that a participating user
does not have to be connected to the session at any given time.\"") :superclasses "eieio-speedbar-file-button" :members (("color" variable (:documentation "Color used to indicate ownership or authorship by the
user. Examples includes text written by the user or the user name
itself.") nil nil)) :type "class") nil [7899 8340]) ("rudel-document" type (:typemodifiers ("\"This class represents a document, which participants of a
collaborative editing session can subscribe to.\"" ":abstract" "t") :superclasses "eieio-speedbar-file-button" :members (("session" variable (:type "rudel-session") nil nil) ("buffer" variable (:default-value "nil" :type "(or null buffer)") nil nil) ("subscribed" variable (:default-value "nil" :type "list") nil nil)) :type "class") nil [8384 8906]) ("rudel-unique-name" function (:parent "rudel-document" :arguments ("this")) nil [8908 9060]) ("rudel-suggested-buffer-name" function (:parent "rudel-document" :arguments ("this")) nil [9062 9223]) ("rudel-attach-to-buffer" function (:parent "rudel-document" :arguments ("this" "buffer")) nil [9225 10287]) ("rudel-detach-from-buffer" function (:parent "rudel-document" :arguments ("this")) nil [10289 11383]) ("rudel-insert" function (:parent "rudel-document" :arguments ("this" "position" "data")) nil [11385 11869]) ("rudel-delete" function (:parent "rudel-document" :arguments ("this" "position" "length")) nil [11871 12254]) ("rudel-local-operation" function (:parent "rudel-document" :arguments ("this" "operation")) nil [12256 12863]) ("rudel-remote-operation" function (:parent "rudel-document" :arguments ("this" "user" "operation")) nil [12865 13419]) ("rudel-chunks" function (:parent "rudel-document" :arguments ("this")) nil [13421 15148]) ("rudel-buffer-has-document-p" function (:arguments ("&optional" "buffer")) nil [15185 15451]) ("rudel-buffer-document" function (:arguments ("&optional" "buffer")) nil [15453 15701]) ("rudel-set-buffer-document" function (:arguments ("document" "&optional" "buffer")) nil [15703 16025]) ("rudel-handle-buffer-change" function (:arguments ("from" "to" "length")) nil [16027 17542]) ("rudel-buffer-change-workaround" function (:arguments ("from" "to")) nil [17544 17722]) ("rudel-mode-changed-buffers" variable nil nil [17772 17889]) ("rudel-handle-major-mode-change" function nil nil [17891 18382]) ("rudel-after-major-mode-change" function nil nil [18384 19014]) ("rudel-load-backends" function nil nil [19044 19444]) ("rudel-suitable-backends" function (:arguments ("predicate")) nil [19446 19742]) ("rudel-choose-backend" function (:arguments ("&optional" "predicate")) nil [19744 20456]) ("rudel-join-session" function (:user-visible-flag t) nil [20505 21468]) ("rudel-host-session" function (:user-visible-flag t) nil [21485 22160]) ("rudel-end-session" function (:user-visible-flag t) nil [22177 22418]) ("rudel-change-color" function (:user-visible-flag t) nil [22435 23181]) ("rudel-subscribe" function (:user-visible-flag t :arguments ("document")) nil [23198 24423]) ("rudel-publish-buffer" function (:user-visible-flag t :arguments ("&optional" "buffer")) nil [24440 25340]) ("rudel-unpublish-buffer" function (:user-visible-flag t :arguments ("&optional" "buffer")) nil [25357 26011]) ("rudel" package nil nil [26013 26029]))
    :file "rudel.el"
    :pointmax 26053
    )
   (semanticdb-table "rudel-loaddefs.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("rudel-join-session" function (:prototype-flag t :user-visible-flag t) nil [24 102]) ("global-rudel-minor-mode" function (:prototype-flag t :user-visible-flag t) nil [103 199]) ("global-set-key" code nil nil [201 253]) ("setq" code nil nil [255 332]) ("dolist" code nil nil [334 437]) ("eval-after-load" code nil nil [439 568]) ("rudel-loaddefs" package nil nil [570 595]))
    :file "rudel-loaddefs.el"
    :pointmax 595
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0beta3"
  :semanticdb-version "2.0beta3"
  )
