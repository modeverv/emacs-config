#name : rest scaffold  ... ,  ...
# --

# GET /$1s
# GET /$1s.xml
def index
  @$1s = $1.all

  respond_to do |format|
    format.html # index.html.erb
    format.xml  { render :xml => @$1s }
  end
end

# GET /$1s/1
# GET /$1s/1.xml
def show
  @$1 = $1.find(params[:id])

  respond_to do |format|
    format.html # show.html.erb
    format.xml  { render :xml => @$1 }
  end
end

# GET /$1s/new
# GET /$1s/new.xml
def new
  @$1 = $1.new

  respond_to do |format|
    format.html # new.html.erb
    format.xml  { render :xml => @$1 }
  end
end

# GET /$1s/1/edit
def edit
  @$1 = $1.find(params[:id])
end

# POST /$1s
# POST /$1s.xml
def create
  @$1 = $1.new(params[:$1])

  respond_to do |format|
    if @$1.save
      flash[:notice] = '$1 was successfully created.'
      format.html { redirect_to(@$1) }
      format.xml  { render :xml => @$1, :status => :created, :location => @$1 }
    else
      format.html { render :action => "new" }
      format.xml  { render :xml => @$1.errors, :status => :unprocessable_entity }
    end
  end
end

# PUT /$1s/1
# PUT /$1s/1.xml
def update
  @$1 = $1.find(params[:id])

  respond_to do |format|
    if @$1.update_attributes(params[:$1])
      flash[:notice] = '$1 was successfully updated.'
      format.html { redirect_to(@$1) }
      format.xml  { head :ok }
    else
      format.html { render :action => "edit" }
      format.xml  { render :xml => @$1.errors, :status => :unprocessable_entity }
    end
  end
end

# DELETE /$1s/1
# DELETE /$1s/1.xml
def destroy
  @$1 = $1.find(params[:id])
  @$1.destroy

  respond_to do |format|
    format.html { redirect_to($1s_url) }
    format.xml  { head :ok }
  end
end
